# Try to make tmux work better with ssh-agent
set -g update-environment "DISPLAY SSH_ASKPASS SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY"
set-environment -g SSH_AUTH_SOCK $HOME/.ssh/ssh-auth-sock

# Some settings
set-option -g history-limit 100000
set-option -g set-titles off
set-option -g mouse on             # Select and paste with alt+select & alt+middle-click
set-option -g -w allow-rename off

# Use vi-keys
set-option -g status-keys vi
set-option -g -w mode-keys vi

# C-b,M - toggle monitor activity
bind-key M 'set-window-option monitor-activity;display "monitor #{?monitor-activity,on,off}"'
# C-b, S - toggle synchronize panes
bind-key S 'set -w synchronize-panes;set -w -F pane-active-border-style "#{?pane_synchronized,fg=red,fg=green}";display "sync #{?pane_synchronized,on,off}"'

# Default split keys
# bind-key \" split-window -h
# bind-key % split-window

# Use different keys to split a window with a LOCAL pane
bind-key c-s split-window -h
bind-key c-v split-window

# Cycle through panes with vi keys
bind-key C-h select-pane -L
bind-key C-j select-pane -D
bind-key C-k select-pane -U
bind-key C-l select-pane -R
bind-key C-, select-pane -l

# Split horizontally for C-b," (if ssh'd to host, put that host in the split)
if-shell '[ -x /srv/scripts/bin/tmux_winsplit ]' \
  'bind-key \" if-shell "/srv/scripts/bin/tmux_winsplit #{window_name}" "run-shell \"tmux split-window -h\"" "run-shell \"tmux split-window -h \\\"ssh #{window_name}\\\"\""' \
  'bind-key \" if-shell "echo \" $HOSTNAME me media bash ksh zsh csh sh \" | grep -q \" #{window_name} \"" "run-shell \"tmux split-window -h\"" "run-shell \"tmux split-window -h \\\"ssh #{window_name}\\\"\""'

# Split vertically for C-b,% (if ssh'd to host, put that host in the split)
if-shell '[ -x /srv/scripts/bin/tmux_winsplit ]' \
  'bind-key % if-shell "/srv/scripts/bin/tmux_winsplit #{window_name}" "run-shell \"tmux split-window\"" "run-shell \"tmux split-window \\\"ssh #{window_name}\\\"\""' \
  'bind-key % if-shell "echo \" $HOSTNAME me media bash ksh zsh csh sh \" | grep -q \" #{window_name} \"" "run-shell \"tmux split-window\"" "run-shell \"tmux split-window \\\"ssh #{window_name}\\\"\""'

## C-b,k for konnect to SSH host in a new window
if-shell '[ -x /srv/scripts/bin/tmux_groupssh ]' \
  'bind-key k command-prompt -p "Host (or list) to ssh to:" "run-shell \"/srv/scripts/bin/tmux_groupssh %%\""' \
  'bind-key k command-prompt -p "Host (or list) to ssh to:" "run-shell \"g=\\\$(echo %%|sed \\\"s/,/ /g\\\");c=0;for f in \\\$g; do [ \\\$c = 0 ] && tmux new-window -n \\\$f \\\"ssh \\\$f\\\" || tmux split-window -t:\\\$ \\\"ssh \\\$f\\\"; c=\\\$((c+1));done;tmux select-layout -t:\\\$.0 tiled;tmux set -w -t:\\\$.0 synchronize-panes;tmux set -gw -t:\\\$.0 pane-active-border-style \\\"fg=red\\\";tmux selectp -t:\\\$.0\""'

# C-b,j for join -- split this window and ssh to a specified host
bind-key j command-prompt -p "Host to ssh to (split):" "split-window -h 'ssh %1'"

# C-b,n for new -- open a new window sshing to same host as current window
bind-key C-n run-shell 'tmux new-window -n "#{window_name}" "ssh #{window_name}"'

# Read any configuration from a local file (like: bind-key c new-window -n "mercury")
if-shell "test -e ~/.tmux.conf.local" "source-file ~/.tmux.conf.local"
